name: Build and Push to K3s Registry

on:
  push:
    branches:
      - '**'  # Trigger on all branches

permissions:
  contents: read
  packages: write

env:
  REGISTRY: irfanmu93
  IMAGE_NAME: iris_analysis
  S3_BUCKET: dagster-example-bucket

jobs:
  build-and-push:
    runs-on: [self-hosted, Linux, X64]  # Use the custom label

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v8.1.5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to docker registry
        run: |
          echo "${{ secrets.REGISTRY_PAT }}" | docker login \
            --username "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

      - name: Push and verify image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.extract_branch.outputs.branch }} .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.extract_branch.outputs.branch }}
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.extract_branch.outputs.branch }}

      - name: Check or Create S3 Entry
        id: s3check
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

          echo "Configuring AWS CLI with secrets"
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_PAGER=""
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region eu-central-003        
          aws configure set default.s3.signature_version s3v4

          echo "Create file with branch as name"
          S3_KEY="${{ steps.extract_branch.outputs.branch }}"
          echo SYNC > "${{ steps.extract_branch.outputs.branch }}.txt"

          echo "Uploading..."
          export AWS_REQUEST_CHECKSUM_CALCULATION=when_required
          export AWS_RESPONSE_CHECKSUM_VALIDATION=when_required
          # aws s3api put-object --endpoint-url https://s3.eu-central-003.backblazeb2.com --bucket "$S3_BUCKET" --key "$S3_KEY" --body "${S3_KEY}.txt"
          
          aws --endpoint-url https://myminio-hl.minio-tenant.svc.cluster.local:9000 s3api put-object \
              --bucket "$S3_BUCKET" \
              --key "$S3_KEY" \
              --body "${S3_KEY}.txt"